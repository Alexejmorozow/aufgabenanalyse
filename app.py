import streamlit as st

def aufgabenanalyse():
    # --- EINLEITUNG ---
    st.title("Willkommen zum Aufgaben-Entscheidungshelfer!")

    st.write("""
    In Teams, Projekten oder Organisationen gibt es unterschiedliche Arten von Aufgaben.
    Je nachdem, wie der Erfolg zustande kommt, sind unterschiedliche Strategien f√ºr Zusammenarbeit und Entscheidungsfindung notwendig.

    **Diese App hilft dir herauszufinden, welche Art von Aufgabe du gerade vor dir hast.**
    """)

    with st.expander("‚ÑπÔ∏è So funktioniert es:"):
        st.write("""
        - Du beantwortest **12 kurze Fragen** zu deiner Aufgabe auf einer Skala von **1 bis 7**  
          *(1 = trifft √ºberhaupt nicht zu, 7 = trifft voll zu)*.
        - Die App analysiert deine Antworten und ordnet deine Aufgabe einem oder mehreren Aufgabentypen zu:
            - **Disjunktiv:** Erfolg h√§ngt stark von der **besten Leistung** im Team ab.  
            - **Konjunktiv:** Erfolg h√§ngt vom **schw√§chsten Glied** ab ‚Äì alle m√ºssen gut zusammenarbeiten.  
            - **Additiv:** Jeder Beitrag z√§hlt ‚Äì die **Summe aller Leistungen** bestimmt den Erfolg.
        - Du erh√§ltst eine **Empfehlung**, wie du dein Team organisieren und Entscheidungen treffen kannst.
        """)

    with st.expander("üí° Nutzen:"):
        st.write("""
        - Klarheit dar√ºber, wie dein Team zusammenarbeiten sollte  
        - Die richtige Entscheidungsstrategie f√ºr dein aktuelles Projekt finden  
        - St√§rken und Schw√§chen im Team besser verstehen
        """)

    st.info("Hinweis: Beantworte die Fragen ehrlich und spontan ‚Äì es gibt keine richtigen oder falschen Antworten.")
    st.divider()

    # --- FRAGEN ---
    st.title("üéØ Aufgaben-Analyse")
    st.write("Bitte beantworte die folgenden Fragen auf einer Skala von 1‚Äì7:")
    st.caption("1 = trifft √ºberhaupt nicht zu, 4 = teils zutreffend, 7 = trifft voll zu")

    SCHWELLENWERT_HYBRID = 6  # Unterschied, ab dem wir von Hybrid sprechen

    # 12 durchmischte Fragen
    fragen = [
        {"text": "Je mehr Mitglieder aktiv mitwirken, desto besser ‚Äì auch kleine Beitr√§ge summieren sich zu einem gro√üen Ergebnis.", "typ": "additiv"},
        {"text": "Wenn auch nur eine Person ihre Aufgabe nicht erf√ºllt, ist das gesamte Projekt gef√§hrdet.", "typ": "konjunktiv"},
        {"text": "Eine einzelne Spitzenidee oder herausragende Leistung kann den gesamten Projekterfolg sicherstellen.", "typ": "disjunktiv"},
        {"text": "Die Zusammenarbeit scheitert, wenn ein einzelnes Mitglied nicht die n√∂tige Qualit√§t liefert.", "typ": "konjunktiv"},
        {"text": "Erfolg entsteht vor allem durch die Summe vieler Einzelbeitr√§ge, nicht durch einzelne Spitzenleistungen.", "typ": "additiv"},
        {"text": "Die Leistung der besten Person bestimmt weitgehend, ob das Team erfolgreich ist, unabh√§ngig von den anderen.", "typ": "disjunktiv"},
        {"text": "Fehler oder Ausf√§lle einzelner wirken sich sofort und stark auf den Gesamterfolg aus.", "typ": "konjunktiv"},
        {"text": "Wenn alle gleichm√§√üig mitwirken, steigt die Wahrscheinlichkeit f√ºr einen erfolgreichen Abschluss deutlich.", "typ": "disjunktiv"},
        {"text": "Die Leistung des schw√§chsten Mitglieds bestimmt ma√ügeblich, ob das Team sein Ziel erreicht.", "typ": "konjunktiv"},
        {"text": "Jeder Beitrag tr√§gt zum Gesamterfolg bei, aber kein einzelner Ausfall bringt alles zum Scheitern.", "typ": "additiv"},
        {"text": "Auch kleine und regelm√§√üige Beitr√§ge aller Beteiligten k√∂nnen zusammen zu einem sehr starken Gesamtergebnis f√ºhren.", "typ": "additiv"},
        {"text": "F√ºr den Erfolg reicht es, wenn eine Person die Aufgabe vollst√§ndig meistert ‚Äì andere Beitr√§ge sind nicht entscheidend.", "typ": "disjunktiv"},
    ]

    # Punkte-Speicher
    punkte = {"disjunktiv": 0, "konjunktiv": 0, "additiv": 0}

    # Formular f√ºr Fragen
    with st.form("fragen_form"):
        antworten = []
        
        for i, frage in enumerate(fragen, start=1):
            antwort = st.slider(
                f"{i}. {frage['text']}",
                min_value=1,
                max_value=7,
                value=4,
                help="1 = trifft nicht zu, 7 = trifft voll zu"
            )
            antworten.append((frage['typ'], antwort))
        
        submitted = st.form_submit_button("Analyse starten")

    # --- AUSWERTUNG ---
    if submitted:
        # Punkte summieren
        for typ, antwort in antworten:
            punkte[typ] += antwort

        # Prozentuale Verteilung
        gesamtpunkte = sum(punkte.values())
        prozentuale_verteilung = {
            typ: round((wert / gesamtpunkte) * 100, 1) for typ, wert in punkte.items()
        }

        # Sortieren nach h√∂chstem Wert
        sorted_typen = sorted(punkte.items(), key=lambda x: x[1], reverse=True)
        max_typ, max_punkte = sorted_typen[0]
        zweit_typ, zweit_punkte = sorted_typen[1]

        st.success("Analyse abgeschlossen!")

        # Ergebnisse anzeigen
        col1, col2 = st.columns(2)
        with col1:
            st.subheader("üìä Punktest√§nde")
            for typ, wert in punkte.items():
                st.write(f"{typ.capitalize()}: {wert} Punkte")

        with col2:
            st.subheader("üìà Prozentuale Verteilung")
            for typ, prozent in prozentuale_verteilung.items():
                st.progress(prozent / 100, text=f"{typ.capitalize()}: {prozent}%")

        st.divider()
        st.subheader("üéØ Empfehlung")

        # Hybrid-Entscheidung
        if max_punkte - zweit_punkte <= SCHWELLENWERT_HYBRID:
            st.info(f"**üîÄ Hybride Aufgabe erkannt: {max_typ.capitalize()} + {zweit_typ.capitalize()}**")

            if {"disjunktiv", "konjunktiv"} == {max_typ, zweit_typ}:
                st.write("""
                Diese Aufgabe vereint Elemente von Disjunktiv und Konjunktiv.
                - Fokussiere dich sowohl auf die st√§rksten Mitglieder, um Top-Leistungen zu erm√∂glichen,  
                - als auch auf die schw√§cheren Mitglieder, da diese den Erfolg gef√§hrden k√∂nnen.  
                **Strategie:** intensive Koordination, Training und klare Rollen.
                """)
            elif {"disjunktiv", "additiv"} == {max_typ, zweit_typ}:
                st.write("""
                Diese Aufgabe vereint Elemente von Disjunktiv und Additiv.
                - Nutze gezielt die St√§rken der besten Mitglieder,  
                - motiviere gleichzeitig alle anderen, kleine und regelm√§√üige Beitr√§ge zu leisten.  
                **Strategie:** Mischung aus Talentf√∂rderung und breiter Partizipation.
                """)
            elif {"konjunktiv", "additiv"} == {max_typ, zweit_typ}:
                st.write("""
                Diese Aufgabe vereint Elemente von Konjunktiv und Additiv.
                - Stelle sicher, dass **alle aktiv beitragen**,  
                - und k√ºmmere dich besonders um schw√§chere Mitglieder, um Engp√§sse zu vermeiden.  
                **Strategie:** klare Aufgabenverteilung und gemeinsame Qualit√§tsstandards.
                """)
            else:
                st.write("Diese Aufgabe kombiniert verschiedene Aufgabentypen. Nutze eine flexible Strategie.")

        # Klarer Typ
        else:
            st.success(f"**üéØ Klarer Aufgabentyp: {max_typ.capitalize()}**")

            if max_typ == "disjunktiv":
                st.write("""
                **Disjunktive Aufgabe:**  
                - Erfolg h√§ngt stark von den besten Leistungen ab.  
                - Fokussiere dich auf deine Top-Mitglieder, um Spitzenleistungen zu f√∂rdern.  
                - Schw√§chere k√∂nnen unterst√ºtzend wirken, sind aber nicht entscheidend.  
                **Strategie:** gezielte Talentf√∂rderung und Freir√§ume f√ºr die besten Performer.
                """)
            elif max_typ == "konjunktiv":
                st.write("""
                **Konjunktive Aufgabe:**  
                - Der Erfolg h√§ngt vom schw√§chsten Mitglied ab.  
                - Stelle sicher, dass alle gut kooperieren und niemand √ºberfordert ist.  
                - Schw√§chen m√ºssen fr√ºh erkannt und aktiv ausgeglichen werden.  
                **Strategie:** Teamtraining, Coaching und gegenseitige Unterst√ºtzung.
                """)
            elif max_typ == "additiv":
                st.write("""
                **Additive Aufgabe:**  
                - Jeder Beitrag z√§hlt und die Summe aller Leistungen ist entscheidend.  
                - Verteile Arbeit gleichm√§√üig und motiviere alle, kontinuierlich beizutragen.  
                **Strategie:** breite Beteiligung f√∂rdern und Fortschritte transparent machen.
                """)

# Start der App
if __name__ == "__main__":
    aufgabenanalyse()
